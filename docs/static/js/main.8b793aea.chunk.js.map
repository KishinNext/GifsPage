{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","onChange","value","target","placeholder","className","GifGridItem","id","title","url","src","alt","getGifs","category","a","encodeURI","fetch","res","json","data","gifs","map","img","images","original","console","log","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","key","GifExpertApp","categories","index","ReactDOM","render","document","getElementById"],"mappings":"4MA2BeA,EAvBK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAYrC,OACI,mCACI,sBAAMC,SATO,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAKd,SACI,uBAAOO,KAAK,OAAOC,SAZL,SAAC,GAAD,IAAaC,EAAb,EAAGC,OAAUD,MAAb,OAA2BT,EAAcS,IAYPE,YAAY,yBAAsBF,MAAOV,EAAYa,UAAU,2C,OCRhHC,EATK,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAC7B,OACI,qBAAKJ,UAAU,2DAAf,SACI,qBAAKK,IAAKD,EAAKE,IAAKH,O,uBCLnBI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,sEAETL,EAFS,iDAEuCM,UAAUF,GAFjD,+DAGGG,MAAMP,GAHT,cAGTQ,EAHS,gBAIMA,EAAIC,OAJV,uBAIRC,EAJQ,EAIRA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MACXC,IAAKa,EAAIC,OAAOC,SAASf,QATlB,kBAaRW,GAbQ,kCAgBfK,QAAQC,IAAR,MAhBe,0DAAH,sDCuBLC,EApBC,SAAC,GAAgB,IAAfd,EAAc,EAAdA,SAAc,ECAJ,SAACA,GAAa,IAAD,EACXtB,mBAAS,CAC/B4B,KAAM,GACNS,SAAQ,IAHyB,mBAC9BC,EAD8B,KACvBC,EADuB,KAiBrC,OAVAC,qBAAU,WACNnB,EAAQC,GACPmB,MAAK,SAAAV,GACFQ,EAAS,CACLX,KAAMG,EACNM,SAAQ,SAGjB,CAACf,IAEGgB,EDfwBI,CAAapB,GAAhCU,EAFgB,EAErBJ,KAAaS,EAFQ,EAERA,QAEpB,OACI,qCACI,6BAAKf,IACJe,GAAW,2CACZ,qBAAKvB,UAAU,YAAf,SAEYkB,EAAOF,KAAK,SAAAC,GAAG,OACX,wBAAC,EAAD,2BAAiBA,GAAjB,IAAsBY,IAAKZ,EAAIf,eEU5C4B,EArBM,WAAO,IAAD,EAEa5C,mBAAS,CAAC,cAFvB,mBAEhB6C,EAFgB,KAEJ9C,EAFI,KAIvB,OACI,qCACI,oBAAIe,UAAU,oCAAd,0BACA,uBACA,cAAC,EAAD,CAAaf,cAAeA,IAC5B,6BAEQ8C,EAAWf,KAAI,SAACR,EAAUwB,GAAX,OACX,cAAC,EAAD,CAASxB,SAAUA,GAAeA,YCV1DyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8b793aea.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst AddCategory = ({setcategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInputChange = ({ target: { value } }) => setInputValue(value);\r\n\r\n    const handdleSubmit= (e)=>{\r\n        e.preventDefault()\r\n        if(inputValue.trim().length > 2){\r\n            setcategories( cats => [inputValue,...cats])\r\n            setInputValue('')\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={handdleSubmit}>\r\n                <input type=\"text\" onChange={handleInputChange} placeholder=\"Ingrese la bÃºsqeuda\" value={inputValue} className=\"animate__animated animate__fadeIn\"></input>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\nAddCategory.propTypes={\r\n    setcategories: PropTypes.func.isRequired\r\n}\r\nexport default AddCategory\r\n ","import React from 'react'\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__delay-1s\">\r\n            <img src={url} alt={title}></img>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","export const getGifs = async (category) =>{\r\n    try {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=3lOHuu6lTIc2iq7QRu3dPDPISudpIxS9`\r\n        const res = await fetch(url)\r\n        const {data} = await res.json()\r\n        const gifs = data.map(img=>{\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images.original.url\r\n            }\r\n        })\r\n        \r\n        return gifs\r\n       \r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}","import React from 'react'\r\nimport GifGridItem from './GifGridItem'\r\nimport {useFetchGifs} from '../hooks/useFetchGifs'\r\nconst GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category)\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Loading...</p>}\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        images.map((img =>\r\n                            <GifGridItem {...img} key={img.id}/>\r\n                        ))\r\n                    }\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading:true\r\n        }\r\n    )\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n        .then(img =>{\r\n            setstate({\r\n                data: img,\r\n                loading:false\r\n            })\r\n        })\r\n    }, [category])\r\n\r\n    return state\r\n}","import React, {useState} from 'react'\r\nimport AddCategory from './AddCategory'\r\nimport GifGrid from './GifGrid'\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setcategories] = useState(['One Punch'])\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"animate__animated animate__fadeIn\">GifExpertApp</h2>\r\n            <hr></hr>\r\n            <AddCategory setcategories={setcategories}/>     \r\n            <ol>\r\n                {\r\n                    categories.map((category, index)=> \r\n                        <GifGrid category={category} key={category}/>\r\n                        \r\n                    )\r\n                }\r\n            </ol>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './components/GifExpertApp'\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}